@page "/signin"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Frontend.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager

<PageTitle>Log in</PageTitle>

@* <p class="error-flag">@ErrorMessage</p> *@

<section class="sign-in">

    <div class="container">

        <div class="content-box">

            <h1>Welcome Back</h1>

            <p>Don’t have an account yet? <a href="/signup">Sign up here.</a></p>

            <EditForm Model="Input" asp-route-returnUrl="@ReturnUrl" method="post" OnValidSubmit="LoginUser" FormName="signin" novalidate id="sign-in-form">
            <DataAnnotationsValidator />

                <div id="sign-in-form-email" class="input-div email-input">
                    <label for=Input.Email>Email</label>
                    <InputText @bind-Value="Input.Email" />
                    <ValidationMessage For="() => Input.Email" />
                </div>

                <div id="sign-in-form-password" class="input-div password-input">
                    <label for=Input.Password>Password</label>
                    <InputText @bind-Value="Input.Password" type="password" />
                    <ValidationMessage For="() => Input.Password" />
                </div>

@*                 <div id="sign-in-form-remember-me-checkbox" class="checkbox-div">
                    <input type="checkbox" asp-for="Form.RememberMe" />
                    <label asp-for="Form.RememberMe"></label>
                </div> *@

                <button type="submit" class="btn-theme">Sign in</button>

            </EditForm>

            <div class="bottom">

                <a href="#">Forgot your password?</a>
@*                 <div class="line-top">
                    <p>Or sign in with your social network</p>

                    <div class="buttons">
                        <a class="btn-gray" asp-action="Google" asp-controller="Auth"><i class="fa-brands fa-google"></i> Google</a>
                        <a class="btn-gray" asp-action="Facebook" asp-controller="Auth"><i class="fa-brands fa-facebook-f"></i> Facebook</a>
                    </div>

                </div> *@

            </div>

        </div>

    </div>

</section>

@code {
    private string? errorMessage { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo(ReturnUrl ?? "/account/details");
        }
        else
        {
            errorMessage = "Error: Invalid login attempt.";
        }
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}
