@using Frontend.Components.Pages.Courses
@attribute [StreamRendering]

@inject HttpClient http

@code {
    private CourseModel[]? courses;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            courses = await http.GetFromJsonAsync<CourseModel[]>(Environment.GetEnvironmentVariable("Api_CourseProvider_Read"));
        }
        catch (Exception ex) { }
    }

    // new CourseViewModel
    // {
    // Id = 1,
    // Name = "Fullstack Web Developer Course from Scratch",
    // Description = "Suspendisse natoque sagittis, consequat turpis. Sed tristique tellus morbi magna. At vel senectus accumsan, arcu mattis id tempor. Tellus sagittis, euismod porttitor sed tortor est id. Feugiat velit velit, tortor ut. Ut libero cursus nibh lorem urna amet tristique leo. Viverra lorem arcu nam nunc at ipsum quam. A proin id sagittis dignissim mauris condimentum ornare. Tempus mauris sed dictum ultrices.",
    // Ingress = "Egestas feugiat lorem eu neque suspendisse ullamcorper scelerisque aliquam mauris.",
    // Price = 12.50m,
    // HoursToComplete = 220,
    // LikesPercentage = 94,
    // LikesAmount = 4200,
    // Image = "/images/courses/course-1.png",
    // AuthorName = "Albert Flores",
    // AuthorDescription = "Dolor ipsum amet cursus quisque porta adipiscing. Lorem convallis malesuada sed maecenas. Ac dui at vitae mauris cursus in nullam porta sem. Quis pellentesque elementum ac bibendum. Nunc aliquam in tortor facilisis. Vulputate eget risus, metus phasellus. Pellentesque faucibus amet, eleifend diam quam condimentum convallis ultricies placerat. Duis habitasse placerat amet, odio pellentesque rhoncus, feugiat at. Eget pellentesque tristique felis magna fringilla.",
    // AuthorImage = "/images/people/albert-flores.png",
    // AuthorYoutubeFollowersQty = 240,
    // AuthorFacebookFollowersQty = 180,
    // },
    // new CourseViewModel
    // {
    // Id = 2,
    // Name = "Fullstack Web Developer Course from Scratch",
    // Description = "Suspendisse natoque sagittis, consequat turpis. Sed tristique tellus morbi magna. At vel senectus accumsan, arcu mattis id tempor. Tellus sagittis, euismod porttitor sed tortor est id. Feugiat velit velit, tortor ut. Ut libero cursus nibh lorem urna amet tristique leo. Viverra lorem arcu nam nunc at ipsum quam. A proin id sagittis dignissim mauris condimentum ornare. Tempus mauris sed dictum ultrices.",
    // Ingress = "Egestas feugiat lorem eu neque suspendisse ullamcorper scelerisque aliquam mauris.",
    // Price = 12.50m,
    // HoursToComplete = 220,
    // LikesPercentage = 94,
    // LikesAmount = 4200,
    // Image = "/images/courses/course-1.png",
    // AuthorName = "Albert Flores",
    // AuthorDescription = "Dolor ipsum amet cursus quisque porta adipiscing. Lorem convallis malesuada sed maecenas. Ac dui at vitae mauris cursus in nullam porta sem. Quis pellentesque elementum ac bibendum. Nunc aliquam in tortor facilisis. Vulputate eget risus, metus phasellus. Pellentesque faucibus amet, eleifend diam quam condimentum convallis ultricies placerat. Duis habitasse placerat amet, odio pellentesque rhoncus, feugiat at. Eget pellentesque tristique felis magna fringilla.",
    // AuthorImage = "/images/people/albert-flores.png",
    // AuthorYoutubeFollowersQty = 240,
    // AuthorFacebookFollowersQty = 180,
    // },

    private class CourseModel
    {
        public int Id { get; set; }
        public string Name { get; set; } = null!;
        public string Description { get; set; } = null!;
        public string Ingress { get; set; } = null!;
        public decimal Price { get; set; }
        public int HoursToComplete { get; set; }
        public int LikesPercentage { get; set; }
        public int LikesAmount { get; set; }
        public string? Image { get; set; }
        public string? AuthorName { get; set; }
        public string? AuthorDescription { get; set; }
        public string? AuthorImage { get; set; } = "/images/icons/no-profile-picture.svg";
        public int AuthorYoutubeFollowersQty { get; set; }
        public int AuthorFacebookFollowersQty { get; set; }
    }
}

<section class="courses-grid">

    <div class="container">

        <h1>Courses</h1>

@*         <form method="post" asp-action="Index" asp-controller="Courses">
            <select asp-for="@Model.CourseCategory" class="view-filter" onchange="this.form.submit()">
                <option value="">All Categories</option>
                @{
                    foreach (var category in Model.Categories)
                    {
                        <option value="@category.Name" href="@Url.Action("index", new { courseCategory = category.Name } )">@category.Name</option>
                    }
                }
            </select>
        </form>

        <form method="post" asp-action="Index" asp-controller="Courses">
            <div class="search-box">
                <button type="submit"><i class="fa-solid fa-magnifying-glass"></i></button>
                <input placeholder="Search" asp-for="@Model.SearchQuery" onchange="this.form.submit()" />
            </div>
        </form> *@

        <div class="grid">
            @if (courses == null )
            {
                <p>Loading... No Courses found yet </p>
            }
            else
            {
                @foreach (var course in courses)
                {
                    @* <CourseBox Course="@course" /> *@
                    <div class="course-box">

                        <a class="content-box" href="@($"course/{course.Id}")">

                            <div class="img-div">
                                <img src="@course.Image" />

                            </div>

                            <div class="text">

                                <h2 class="title h5">@course.Name</h2>

                                <p class="author">By @course.AuthorName</p>

                                <p class="price">$@course.Price</p>

                            </div>

                            <div class="bottom">

                                <div class="item">
                                    <p><i class="fa-regular fa-clock"></i>@course.HoursToComplete hours</p>
                                </div>

                                <div class="item">
                                    <p><i class="fa-regular fa-thumbs-up"></i>@course.LikesPercentage % (@course.LikesAmount K)</p>
                                </div>

                            </div>

                        </a>

                    </div>
                }
            }

        </div>


@*         @{
            if (Model.Pagination != null && Model.Pagination.TotalPages > 1)
            {
                <div class="pagination">
                    @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                    {
                        if (i == Model.Pagination.CurrentPage)
                        {
                            <span class="number active">@i</span>
                        }
                        else
                        {
                            <a class="number inactive" href="@Url.Action("index", new { pageNumber = i, pageSize = Model.Pagination.PageSize })">@i</a>
                        }
                    }
                </div>
            }
        } *@


    </div>
</section>